import React, { useEffect, useState } from 'react';
import axios from 'axios';
import './Finance.css';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
} from 'recharts';

// –û–π –Ω–æ–º–ª–∞—Ä–∏
const monthNames = [
  '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
  '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç–∞–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
];

const Finance = () => {
  const [buyurtmalar, setBuyurtmalar] = useState([]);
  const [oylikFoydalar, setOyFoydalar] = useState([]);
  const [tanlanganOy, setTanlanganOy] = useState(null);
  const [oyMalumoti, setOyMalumoti] = useState({ daromad: 0, foyda: 0 });
  const [yuklanmoqda, setYuklanmoqda] = useState(true);
  const [xatolik, setXatolik] = useState(null);

  // üü° –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ –æ–ª–∏—à –≤–∞ –æ–π–ª–∞—Ä –±—û–π–∏—á–∞ –≥—É—Ä—É“≥–ª–∞—à
  useEffect(() => {
    const malumotlarniYuklash = async () => {
      setYuklanmoqda(true);
      setXatolik(null);
      try {
        const javob = await axios.get('https://alikafecrm.uz/order');

        // –•–∞—Ä –±–∏—Ä –±—É—é—Ä—Ç–º–∞ —É—á—É–Ω —É–º—É–º–∏–π –Ω–∞—Ä—Ö–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
        const yangilanganBuyurtmalar = javob.data.map(buyurtma => {
          const jami = buyurtma.orderItems?.reduce((acc, item) => {
            return acc + (item.product?.price || 0) * item.count;
          }, 0);
          return { ...buyurtma, totalPrice: jami || 0 };
        });

        setBuyurtmalar(yangilanganBuyurtmalar);

        // üü¢ –û–π–ª–∞—Ä –±—û–π–∏—á–∞ –¥–∞—Ä–æ–º–∞–¥–Ω–∏ –≥—É—Ä—É“≥–ª–∞—à
        const guruhlangan = {};
        yangilanganBuyurtmalar.forEach(buyurtma => {
          const oy = new Date(buyurtma.createdAt).getMonth();
          if (!guruhlangan[oy]) guruhlangan[oy] = 0;
          guruhlangan[oy] += buyurtma.totalPrice;
        });

        // üîµ –§–æ–π–¥–∞ (“≥–æ–∑–∏—Ä—á–∞ —É–º—É–º–∏–π –¥–∞—Ä–æ–º–∞–¥ –¥–µ–± –æ–ª–∏–Ω–≥–∞–Ω)
        const foydalar = Object.keys(guruhlangan).map(oy => ({
          month: parseInt(oy),
          revenue: guruhlangan[oy],
          profit: guruhlangan[oy],
        }));

        setOyFoydalar(foydalar);

        if (foydalar.length > 0) setTanlanganOy(foydalar[0].month);
      } catch (err) {
        setXatolik("–ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ –æ–ª–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏.");
        console.error(err);
      } finally {
        setYuklanmoqda(false);
      }
    };

    malumotlarniYuklash();
  }, []);

  // üü† –¢–∞–Ω–ª–∞–Ω–≥–∞–Ω –æ–π –º–∞—ä–ª—É–º–æ—Ç–∏–Ω–∏ —è–Ω–≥–∏–ª–∞—à
  useEffect(() => {
    if (tanlanganOy === null) return;
    const oy = oylikFoydalar.find(p => p.month === tanlanganOy);
    if (oy) {
      setOyMalumoti({
        daromad: oy.revenue,
        foyda: oy.profit,
      });
    }
  }, [tanlanganOy, oylikFoydalar]);

  // üìä –ì—Ä–∞—Ñ–∏–∫ —É—á—É–Ω –º–∞—ä–ª—É–º–æ—Ç
  const grafikMalumot = oylikFoydalar.map(p => ({
    name: monthNames[p.month],
    foyda: p.profit,
  }));

  if (yuklanmoqda) return <div className="finance-loading">‚è≥ –Æ–∫–ª–∞–Ω–º–æ“õ–¥–∞...</div>;
  if (xatolik) return <div className="finance-error">{xatolik}</div>;

  return (
    <div className="finance-container">
      <h2 className="finance-title">üìä –§–æ–π–¥–∞ —Ç–∞“≥–ª–∏–ª–∏ (–û–π–ª–∞—Ä –±—û–π–∏—á–∞)</h2>

      <div className="finance-filterWrapper">
        <label htmlFor="month-select" className="finance-label">–û–π —Ç–∞–Ω–ª–∞–Ω–≥:</label>
        <select
          id="month-select"
          value={tanlanganOy ?? ''}
          onChange={e => setTanlanganOy(parseInt(e.target.value))}
          className="finance-select"
        >
          {oylikFoydalar.map(p => (
            <option key={p.month} value={p.month}>
              {monthNames[p.month]}
            </option>
          ))}
        </select>
      </div>

      <div className="finance-cardsRow">
        <div className="finance-card finance-revenueCard">
          <h3 className="finance-cardTitle">–ñ–∞–º–∏ –î–∞—Ä–æ–º–∞–¥</h3>
          <p className="finance-cardValue">{oyMalumoti.daromad.toLocaleString()} —Å—û–º</p>
        </div>
        <div className="finance-card finance-profitCard">
          <h3 className="finance-cardTitle">–û–π–ª–∏–∫ –§–æ–π–¥–∞</h3>
          <p className={`finance-profitValue ${oyMalumoti.foyda >= 0 ? 'positive' : 'negative'}`}>
            {oyMalumoti.foyda.toLocaleString()} —Å—û–º
          </p>
        </div>
      </div>

      <div className="finance-chartWrapper">
        <h3 className="finance-cardTitle">üìà –ì—Ä–∞—Ñ–∏–∫: –§–æ–π–¥–∞ –æ–π–ª–∞—Ä –±—û–π–∏—á–∞</h3>
        <div style={{ overflowX: 'auto' }}>
          <BarChart
            width={400}
            height={350}
            data={grafikMalumot}
            margin={{ top: 10, right: 20, bottom: 50, left: 10 }}
          >
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="name" angle={-30} textAnchor="end" />
            <YAxis domain={[0, max => Math.ceil(max * 1.2)]} />
            <Tooltip />
            <Bar dataKey="foyda" fill="#4caf50" radius={[6, 6, 0, 0]} />
          </BarChart>
        </div>
      </div>
    </div>
  );
};

export default Finance;
